@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>


@* •	
    It binds the form element 
    (e.g.,<input>, <label>,<textarea>) to a specific property in your model.
	
    For example, 
    asp-for="Input.Password" binds the <input> field to the Password property of the Input model. *@



<div class="row">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>

             <div class="form-floating mb-3">
                <input asp-for="Input.FirstName" class="form-control" aria-required="true" placeholder="John" />
                <label asp-for="Input.FirstName">First Name</label>
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>

             <div class="form-floating mb-3">
                <input asp-for="Input.LastName" class="form-control" aria-required="true" placeholder="Doe" />
                <label asp-for="Input.LastName">Last Name</label>
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.DateOfBirth" class="form-control" aria-required="true" placeholder="" />
                <label asp-for="Input.DateOfBirth">Date Of Birth</label>
                <span asp-validation-for="Input.DateOfBirth" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>

            @foreach(var role in Model.RoleNames)
            {
                <div class="form-check">
                    <input class="form-check-input" type="radio" asp-for="Input.RoleName" value="@role">
                    <label class="form-check-label" asp-for="Input.RoleName">
                        @role
                    </label>
                </div>
            
            
            }

          @* Purpose of value='@role' is to bind the selected radio button value to the Input.RoleName property in your model.

            When the user selects a radio button and submits the form,
            the value of the selected radio button (e.g., "Admin") is sent to the server.
            
            This value is bound to the Input.RoleName property in your model 
            because of the asp-for="Input.RoleName" attribute. *@

            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
